/* Generated by AN DISI Unibo */ 
package it.unibo.led

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Led ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "off"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("off") { //this:State
					action { //it:State
						discardMessages = true
						println("	Turned Off	")
					}
					 transition(edgeName="t02",targetState="on",cond=whenDispatch("cmdOn"))
				}	 
				state("on") { //this:State
					action { //it:State
						println("	Turned On	")
						println("	=====Blinking=====	")
					}
					 transition(edgeName="t03",targetState="off",cond=whenDispatch("cmdOff"))
				}	 
			}
		}
}
