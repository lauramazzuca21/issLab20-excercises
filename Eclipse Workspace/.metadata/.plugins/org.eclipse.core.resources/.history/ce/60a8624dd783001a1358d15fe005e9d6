/* Generated by AN DISI Unibo */ 
package it.unibo.qa0

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Qa0 ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("Hello World")
						forward("msg1", "msg1(hello)" ,"qa0" ) 
						forward("msg1", "msg1(hello2)" ,"qa0" ) 
					}
					 transition(edgeName="t00",targetState="work",cond=whenDispatch("msg1"))
				}	 
				state("work") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("Working")
					}
					 transition(edgeName="t01",targetState="work",cond=whenDispatch("msg1"))
				}	 
			}
		}
}
