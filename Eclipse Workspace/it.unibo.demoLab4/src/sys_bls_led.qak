/*
 * This model gives essential and relevant information about
 * 	     STRUCTURE, INTERACTION and BEHAVIOR
 * about the system
 * 
 * The model is EXECUTABLE
 */

System -msglog bls_led
 
Dispatch turnOn : turnOn(X)   
Dispatch turnOff : turnOff(X)       
   
Context ctxblsled    ip [host="localhost" port=8075] 		 
  
/* 
 * Just an actuator device ...
 */ 
QActor led context ctxblsled {  
[# 
	var state = false
	val leddev = resources.bls.kotlin.led.create()
#]    
	State s0 initial {  
		//run resources.it.unibo.bls.devices.gui.LedAsGui.create( )
 		println("led started")
	} 
	Goto waitCmd   
	
	State waitCmd{  
		println("led waits ...") 
	}   
	Transition t0     
 		whenMsg turnOn            -> turnLedOn
 		whenMsg turnOff            -> turnLedOff
  	  
	State  turnLedOn{  
		updateResource [#"ledstate($state)"#]   
		[# state=true #]
		
		[# leddev.turnOn() #]

	}	
	Goto waitCmd  
	      
	State  turnLedOff{  
		updateResource [#"ledstate($state)"#]   
		[# state=true #]
		[# leddev.turnOff() #]

	}	
	Goto waitCmd    
}

 
QActor manager context ctxblsled {
	
	State init initial {
		forward led -m turnOn : turnOn(1)
		delay 500
		forward led -m turnOff : turnOff(1)
		delay 500
		forward led -m turnOn : turnOn(1)
		delay 500
		forward led -m turnOff : turnOff(1)
		
	}
	
}
 