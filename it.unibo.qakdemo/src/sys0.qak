/*
 * This is a MODEL, instance of the QAK metamodel
 */
System sys0
//mqttBroker "localhost" : 1883

Dispatch msg1 : msg1(ARG)
Dispatch msg2 : msg2(ARG)

Event alarm : alarm( KIND ) 

Context ctxdemo0 ip [host="localhost" port=8055]

QActor demo context ctxdemo0{ 
[#
	var A = 0L
#]
	State s0 initial { 	 
		 memoCurrentTime A
 	} 
 	Goto s1 
 	
 	State s1 {
 		println("demo in s1")
 	}
 	Transition t0 whenMsg msg1 -> s2
 				  whenMsg msg2 -> s3

 	State s2{
 		println("demo in s2")		 
 	}
 	Transition t0 whenMsg msg2 -> s3

 	State s3{
  		println("demo in s3")		
 	}
 	Goto s1

}
QActor sender context ctxdemo0{
	State s0 initial { 	
		 forward demo -m msg1 : msg1(1)
		 delay 300
		 forward demo -m msg1 : msg1(2)
		 delay 300
		 forward demo -m msg2 : msg2(1)		 
		 emit alarm : alarm( fire ) 
		 delay 1200
		 emit alarm : alarm( tsunami )
		 delay 1000
		 terminate 0 
	}	
}
QActor perceiver context ctxdemo0{
	State s0 initial { 	
		println("perceiver waits ..")
	}
	Transition t0 whenEvent alarm -> handleAlarm
	
	State  handleAlarm{
		printCurrentMessage
	}
	Goto s0
	
}
